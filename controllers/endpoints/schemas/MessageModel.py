
from pydantic import BaseModel, Field
from typing import Optional, List, Any

class MessageModel(BaseModel):
    id: Optional[int] = Field(None, title="ID", description="")
    message_type: Any = Field(None, title="Type", description="Used to categorize message generator\n'email': generated by an incoming email e.g. mailgateway\n'comment': generated by user input e.g. through discuss or composer\n'email_outgoing': generated by a mailing\n'notification': generated by system e.g. tracking messages\n'auto_comment': generated by automated notification mechanism e.g. acknowledgment\n'user_notification': generated for a specific recipient")
    parent_id: Optional[int] = Field(None, title="Parent Message", description="")
    res_id: Optional[Any] = Field(None, title="Related Document ID", description="")
    record_alias_domain_id: Optional[int] = Field(None, title="Alias Domain", description="")
    record_company_id: Optional[int] = Field(None, title="Company", description="")
    subtype_id: Optional[int] = Field(None, title="Subtype", description="")
    mail_activity_type_id: Optional[int] = Field(None, title="Mail Activity Type", description="")
    author_id: Optional[int] = Field(None, title="Author", description="Author of the message. If not set, email_from may hold an email address that did not match any partner.")
    author_guest_id: Optional[int] = Field(None, title="Guest", description="")
    message_id: Optional[str] = Field(None, title="Message-Id", description="Message unique identifier")
    mail_server_id: Optional[int] = Field(None, title="Outgoing mail server", description="")
    link_preview_ids: Optional[List[int]] = Field(None, title="Link Previews", description="")
    reaction_ids: Optional[List[int]] = Field(None, title="Reactions", description="")
    attachment_ids: Optional[List[int]] = Field(None, title="Attachments", description="")
    child_ids: Optional[List[int]] = Field(None, title="Child Messages", description="")
    partner_ids: Optional[List[int]] = Field(None, title="Recipients", description="")
    notified_partner_ids: Optional[List[int]] = Field(None, title="Partners with Need Action", description="")
    notification_ids: Optional[List[int]] = Field(None, title="Notifications", description="")
    starred_partner_ids: Optional[List[int]] = Field(None, title="Favorited By", description="")
    tracking_value_ids: Optional[List[int]] = Field(None, title="Tracking values", description="Tracked values are stored in a separate model. This field allow to reconstruct the tracking and to generate statistics on the model.")
    mail_ids: Optional[List[int]] = Field(None, title="Mails", description="")
    rating_ids: Optional[List[int]] = Field(None, title="Related ratings", description="")
    letter_ids: Optional[List[int]] = Field(None, title="Letter", description="")
    subject: Optional[str] = Field(None, title="Subject", description="")
    date: Optional[str] = Field(None, title="Date", description="")
    body: Optional[Any] = Field(None, title="Contents", description="")
    description: Optional[str] = Field(None, title="Short description", description="Message description: either the subject, or the beginning of the body")
    preview: Optional[str] = Field(None, title="Preview", description="The text-only beginning of the body used as email preview.")
    model: Optional[str] = Field(None, title="Related Document Model", description="")
    record_name: Optional[str] = Field(None, title="Message Record Name", description="")
    is_internal: Optional[bool] = Field(None, title="Employee Only", description="Hide to public / portal users, independently from subtype configuration.")
    email_from: Optional[str] = Field(None, title="From", description="Email address of the sender. This field is set when no matching partner is found and replaces the author_id field in the chatter.")
    author_avatar: Optional[Any] = Field(None, title="Author's avatar", description="")
    is_current_user_or_guest_author: Optional[bool] = Field(None, title="Is Current User Or Guest Author", description="")
    needaction: Optional[bool] = Field(None, title="Need Action", description="")
    has_error: Optional[bool] = Field(None, title="Has error", description="")
    pinned_at: Optional[str] = Field(None, title="Pinned", description="Datetime at which the message has been pinned")
    starred: Optional[bool] = Field(None, title="Starred", description="Current user has a starred notification linked to this message")
    reply_to_force_new: Optional[bool] = Field(None, title="No threading for answers", description="If true, answers do not go in the original document discussion thread. Instead, it will check for the reply_to in tracking message-id and redirected accordingly. This has an impact on the generated message-id.")
    reply_to: Optional[str] = Field(None, title="Reply-To", description="Reply email address. Setting the reply_to bypasses the automatic thread creation.")
    email_layout_xmlid: Optional[str] = Field(None, title="Layout", description="")
    email_add_signature: Optional[bool] = Field(None, title="Email Add Signature", description="")
    display_name: Optional[str] = Field(None, title="Display Name", description="")
    create_uid: Optional[int] = Field(None, title="Created by", description="")
    create_date: Optional[str] = Field(None, title="Created on", description="")
    write_uid: Optional[int] = Field(None, title="Last Updated by", description="")
    write_date: Optional[str] = Field(None, title="Last Updated on", description="")
    rating_value: Optional[Any] = Field(None, title="Rating Value", description="")
    has_sms_error: Optional[bool] = Field(None, title="Has SMS error", description="")
    snailmail_error: Optional[bool] = Field(None, title="Snailmail message in error", description="")
    parent_author_name: Optional[str] = Field(None, title="Parent Author Name", description="")
    parent_body: Optional[Any] = Field(None, title="Parent Body", description="")

