
from pydantic import BaseModel, Field
from typing import Optional, List, Any

class IncomingMailServerModel(BaseModel):
    id: Optional[int] = Field(None, title="ID", description="")
    name: str = Field("", title="Name", description="")
    server_type: Any = Field(None, title="Server Type", description="")
    object_id: Optional[int] = Field(None, title="Create a New Record", description="Process each incoming mail as part of a conversation corresponding to this document type. This will create new documents for new conversations, or attach follow-up emails to the existing conversations (documents).")
    message_ids: Optional[List[int]] = Field(None, title="Messages", description="")
    google_gmail_authorization_code: Optional[str] = Field(None, title="Authorization Code", description="")
    google_gmail_refresh_token: Optional[str] = Field(None, title="Refresh Token", description="")
    google_gmail_access_token: Optional[str] = Field(None, title="Access Token", description="")
    google_gmail_access_token_expiration: Optional[int] = Field(None, title="Access Token Expiration Timestamp", description="")
    google_gmail_uri: Optional[str] = Field(None, title="URI", description="The URL to generate the authorization code from Google")
    active: Optional[bool] = Field(None, title="Active", description="")
    state: Optional[Any] = Field(None, title="Status", description="")
    server: Optional[str] = Field(None, title="Server Name", description="Hostname or IP of the mail server")
    port: Optional[int] = Field(None, title="Port", description="")
    server_type_info: Optional[Any] = Field(None, title="Server Type Info", description="")
    is_ssl: Optional[bool] = Field(None, title="SSL/TLS", description="Connections are encrypted with SSL/TLS through a dedicated port (default: IMAPS=993, POP3S=995)")
    attach: Optional[bool] = Field(None, title="Keep Attachments", description="Whether attachments should be downloaded. If not enabled, incoming emails will be stripped of any attachments before being processed")
    original: Optional[bool] = Field(None, title="Keep Original", description="Whether a full original copy of each email should be kept for reference and attached to each processed message. This will usually double the size of your message database.")
    date: Optional[str] = Field(None, title="Last Fetch Date", description="")
    user: Optional[str] = Field(None, title="Username", description="")
    password: Optional[str] = Field(None, title="Password", description="")
    priority: Optional[int] = Field(None, title="Server Priority", description="Defines the order of processing, lower values mean higher priority")
    configuration: Optional[Any] = Field(None, title="Configuration", description="")
    script: Optional[str] = Field(None, title="Script", description="")
    display_name: Optional[str] = Field(None, title="Display Name", description="")
    create_uid: Optional[int] = Field(None, title="Created by", description="")
    create_date: Optional[str] = Field(None, title="Created on", description="")
    write_uid: Optional[int] = Field(None, title="Last Updated by", description="")
    write_date: Optional[str] = Field(None, title="Last Updated on", description="")

