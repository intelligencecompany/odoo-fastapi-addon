
from pydantic import BaseModel, Field
from typing import Optional, List, Any

class LivechatChannelModel(BaseModel):
    id: Optional[int] = Field(None, title="ID", description="")
    name: str = Field("", title="Channel Name", description="")
    rating_ids: Optional[List[int]] = Field(None, title="Ratings", description="")
    available_operator_ids: Optional[List[int]] = Field(None, title="Available Operator", description="")
    user_ids: Optional[List[int]] = Field(None, title="Operators", description="")
    channel_ids: Optional[List[int]] = Field(None, title="Sessions", description="")
    rule_ids: Optional[List[int]] = Field(None, title="Rules", description="")
    website_published: Optional[bool] = Field(None, title="Visible on current website", description="")
    is_published: Optional[bool] = Field(None, title="Is Published", description="")
    can_publish: Optional[bool] = Field(None, title="Can Publish", description="")
    website_url: Optional[str] = Field(None, title="Website URL", description="The full URL to access the document through the website.")
    rating_percentage_satisfaction: Optional[int] = Field(None, title="Rating Satisfaction", description="Percentage of happy ratings")
    rating_count: Optional[int] = Field(None, title="# Ratings", description="")
    rating_avg: Optional[Any] = Field(None, title="Average Rating", description="")
    rating_avg_percentage: Optional[Any] = Field(None, title="Average Rating (%)", description="")
    button_text: Optional[str] = Field(None, title="Text of the Button", description="Default text displayed on the Livechat Support Button")
    default_message: Optional[str] = Field(None, title="Welcome Message", description="This is an automated 'welcome' message that your visitor will see when they initiate a new conversation.")
    input_placeholder: Optional[str] = Field(None, title="Chat Input Placeholder", description="Text that prompts the user to initiate the chat.")
    header_background_color: Optional[str] = Field(None, title="Header Background Color", description="Default background color of the channel header once open")
    title_color: Optional[str] = Field(None, title="Title Color", description="Default title color of the channel once open")
    button_background_color: Optional[str] = Field(None, title="Button Background Color", description="Default background color of the Livechat button")
    button_text_color: Optional[str] = Field(None, title="Button Text Color", description="Default text color of the Livechat button")
    web_page: Optional[str] = Field(None, title="Web Page", description="URL to a static page where you client can discuss with the operator of the channel.")
    are_you_inside: Optional[bool] = Field(None, title="Are you inside the matrix?", description="")
    script_external: Optional[Any] = Field(None, title="Script (external)", description="")
    nbr_channel: Optional[int] = Field(None, title="Number of conversation", description="")
    image_128: Optional[Any] = Field(None, title="Image", description="")
    chatbot_script_count: Optional[int] = Field(None, title="Number of Chatbot", description="")
    display_name: Optional[str] = Field(None, title="Display Name", description="")
    create_uid: Optional[int] = Field(None, title="Created by", description="")
    create_date: Optional[str] = Field(None, title="Created on", description="")
    write_uid: Optional[int] = Field(None, title="Last Updated by", description="")
    write_date: Optional[str] = Field(None, title="Last Updated on", description="")
    website_description: Optional[Any] = Field(None, title="Website description", description="Description of the channel displayed on the website page")

