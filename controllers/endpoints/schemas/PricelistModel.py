
from pydantic import BaseModel, Field
from typing import Optional, List, Any

class PricelistModel(BaseModel):
    id: Optional[int] = Field(None, title="ID", description="")
    name: str = Field("", title="Pricelist Name", description="")
    discount_policy: Any = Field(None, title="Discount Policy", description="")
    activity_user_id: Optional[int] = Field(None, title="Responsible User", description="")
    activity_type_id: Optional[int] = Field(None, title="Next Activity Type", description="")
    currency_id: int = Field(0, title="Currency", description="")
    company_id: Optional[int] = Field(None, title="Company", description="")
    activity_ids: Optional[List[int]] = Field(None, title="Activities", description="")
    message_follower_ids: Optional[List[int]] = Field(None, title="Followers", description="")
    message_partner_ids: Optional[List[int]] = Field(None, title="Followers (Partners)", description="")
    message_ids: Optional[List[int]] = Field(None, title="Messages", description="")
    rating_ids: Optional[List[int]] = Field(None, title="Ratings", description="")
    website_message_ids: Optional[List[int]] = Field(None, title="Website Messages", description="Website communication history")
    country_group_ids: Optional[List[int]] = Field(None, title="Country Groups", description="")
    item_ids: Optional[List[int]] = Field(None, title="Pricelist Rules", description="")
    activity_state: Optional[Any] = Field(None, title="Activity State", description="Status based on activities\nOverdue: Due date is already passed\nToday: Activity date is today\nPlanned: Future activities.")
    activity_type_icon: Optional[str] = Field(None, title="Activity Type Icon", description="Font awesome icon e.g. fa-tasks")
    activity_date_deadline: Optional[str] = Field(None, title="Next Activity Deadline", description="")
    my_activity_date_deadline: Optional[str] = Field(None, title="My Activity Deadline", description="")
    activity_summary: Optional[str] = Field(None, title="Next Activity Summary", description="")
    activity_exception_decoration: Optional[Any] = Field(None, title="Activity Exception Decoration", description="Type of the exception activity on record.")
    activity_exception_icon: Optional[str] = Field(None, title="Icon", description="Icon to indicate an exception activity.")
    message_is_follower: Optional[bool] = Field(None, title="Is Follower", description="")
    has_message: Optional[bool] = Field(None, title="Has Message", description="")
    message_needaction: Optional[bool] = Field(None, title="Action Needed", description="If checked, new messages require your attention.")
    message_needaction_counter: Optional[int] = Field(None, title="Number of Actions", description="Number of messages requiring action")
    message_has_error: Optional[bool] = Field(None, title="Message Delivery error", description="If checked, some messages have a delivery error.")
    message_has_error_counter: Optional[int] = Field(None, title="Number of errors", description="Number of messages with delivery error")
    message_attachment_count: Optional[int] = Field(None, title="Attachment Count", description="")
    message_has_sms_error: Optional[bool] = Field(None, title="SMS Delivery error", description="If checked, some messages have a delivery error.")
    active: Optional[bool] = Field(None, title="Active", description="If unchecked, it will allow you to hide the pricelist without removing it.")
    sequence: Optional[int] = Field(None, title="Sequence", description="")
    display_name: Optional[str] = Field(None, title="Display Name", description="")
    create_uid: Optional[int] = Field(None, title="Created by", description="")
    create_date: Optional[str] = Field(None, title="Created on", description="")
    write_uid: Optional[int] = Field(None, title="Last Updated by", description="")
    write_date: Optional[str] = Field(None, title="Last Updated on", description="")

